
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		начальноеЗаполнение  ();		
	КонецЕсли;
	ХранениеФайлов = Константы.ХранениеФайлов.Получить ();
	установитьЗаголовок  ();
	
КонецПроцедуры

&НаСервере
Процедура начальноеЗаполнение ()
	
	Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	
КонецПроцедуры

&НаСервере
Процедура установитьЗаголовок ()
	
	с = Документы.Вложение.ПолучитьПредставлениеПоВиду ( Объект.ВидВложения );
	Если ( Объект.Ссылка.Пустая () ) Тогда
		Заголовок = с + " (создание)";
	Иначе
		Заголовок = с + " от " + Формат ( Объект.Дата, "ДФ=dd.MM.yyyy" ) + " номер " + Объект.Номер;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	// код ...
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	
	Если ( Элементы.Файлы.ТекущиеДанные <> Неопределено ) Тогда
		сформироватьHTML ();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте 
Процедура сформироватьHTML ()
	
	данные = Элементы.Файлы.ТекущиеДанные;
	п = Новый Структура ();
	п.Вставить ( "ИмяФайла", данные.ИмяФайла );
	п.Вставить ( "КлючСтроки", данные.КлючСтроки );
	п.Вставить ( "Объект", Объект.Ссылка );
	полноеИмяФайла = получитьПолноеИмяФайла ( п );
	HTMLСтрока = получитьHTMLПоФайлу ( полноеИмяФайла );
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьПолноеИмяФайла ( Параметры )
	
	с = "
	|выбрать
	|	Регистр.Объект как Объект,
	|	Регистр.КлючСтроки.Код как КлючСтроки,
	|	Регистр.Папка как Папка,
	| 	Регистр.ИмяФайла как ИмяФайла,
	|	К.Значение как ХранениеФайлов
	|из
	|	РегистрСведений.Файлы как Регистр,
	|	Константа.ХранениеФайлов как К
	|где
	|	Регистр.Объект = &Объект
	|	и Регистр.КлючСтроки = &КлючСтроки
	|";
	запрос = Новый Запрос ( с );
	запрос.УстановитьПараметр ( "Объект", Параметры.Объект );
	запрос.УстановитьПараметр ( "КлючСтроки", Параметры.КлючСтроки );
	результат = запрос.Выполнить ();
	выборка = результат.Выбрать ();
	выборка.Следующий (); 
	полноеИмя = выборка.ХранениеФайлов + выборка.Папка + "\" + РегистрыСведений.Файлы.ПолучитьПрефиксКлюча ( выборка.КлючСтроки ) + выборка.ИмяФайла;
	Возврат полноеИмя;

КонецФункции

&НаСервереБезКонтекста
Функция получитьHTMLПоФайлу ( ИмяФайла )
	
	Возврат Обработки.DocViewer.GenerateHTML ( ИмяФайла );

КонецФункции

&НаКлиенте
Процедура ДобавитьВложение ( Команда )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросЗаписать", ЭтотОбъект ), "Документ еще не записан. Записать?", РежимДиалогаВопрос.ДаНет );
	Иначе
		выбратьФайлы ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаписать ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		Записать ();
		выбратьФайлы ();
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура выбратьФайлы ()
	
	оповещение = Новый ОписаниеОповещения ( "ВыборФайлов", ЭтотОбъект );
	РаботаСФайлами.ВыбратьФайлы ( оповещение );	
			
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлов ( Данные, Парамы ) Экспорт
	
	Если ( Данные = Неопределено ) Тогда
		Возврат;
	Иначе
		добавитьВложения ( Данные.Файлы );
		колво = Объект.Файлы.Количество ();
		идентификатор = Объект.Файлы [ колво - 1 ].ПолучитьИдентификатор ();
		Элементы.Файлы.ТекущаяСтрока = идентификатор;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура добавитьВложения ( Файлы )
	
	ключи = получитьМассивКлючей ();
	Для Каждого п Из Файлы Цикл
		новая = Объект.Файлы.Добавить ();
		новая.ИмяФайла = п.Имя;
		новая.КлючСтроки = получитьКлюч ( ключи );
		ключи.Добавить ( новая.КлючСтроки ); 
		записатьФайлВРегистр ( п, Объект.Ссылка, новая.КлючСтроки );	
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Функция получитьМассивКлючей ()
	
	м = Новый Массив ();
	Для Каждого строкаТЧ Из Объект.Файлы Цикл
		м.Добавить ( строкаТЧ.КлючСтроки );
	КонецЦикла;
	Возврат м;

КонецФункции

&НаСервереБезКонтекста
Функция получитьКлюч ( Ключи )
	
	Возврат Справочники.КлючиСтрок.ПолучитьНовыйКлюч ( Ключи );

КонецФункции

&НаСервереБезКонтекста
Процедура записатьФайлВРегистр ( Данные, Объект, КлючСтроки )
	
	п = Новый Структура ();
	п.Вставить ( "Объект", Объект ); 
	п.Вставить ( "КлючСтроки", КлючСтроки );
	п.Вставить ( "Дата", ТекущаяДатаСеанса () );
	п.Вставить ( "Размер", ( Данные.Размер / 1024 ) );
	п.Вставить ( "Автор", ПараметрыСеанса.ТекущийПользователь );
	п.Вставить ( "Папка", "" );
	п.Вставить ( "ИмяФайла", Данные.Имя );
	п.Вставить ( "Расширение", Данные.Расширение );
	п.Вставить ( "Адрес", Данные.Адрес );
	РегистрыСведений.Файлы.ЗаписатьФайл ( п );
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл ( Команда )
	
	данные = Элементы.Файлы.ТекущиеДанные;
	Если ( данные = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "Объект", Объект.Ссылка );
	п.Вставить ( "КлючСтроки", данные.КлючСтроки );
	адрес = поместитьДаныеВХранилище ( п );
	Если ( ЭтоАдресВременногоХранилища ( адрес ) ) Тогда
		РаботаСФайлами.ВыгрузитьФайл ( адрес, данные.ИмяФайла ); 	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция поместитьДаныеВХранилище ( Параметры )
	
	адрес = "";
	данные = РегистрыСведений.Файлы.ПолучитьДетали ( Параметры );
	Если ( данные <> Неопределено ) Тогда
		полноеИмя = данные.ПолноеИмя;
		дд = Новый ДвоичныеДанные ( полноеИмя );
		адрес = ПоместитьВоВременноеХранилище ( дд );	
	КонецЕсли;
	Возврат адрес;

КонецФункции

&НаКлиенте
Процедура УдалитьВложение ()
	
	идентификаторы = Элементы.Файлы.ВыделенныеСтроки;
	Если ( идентификаторы.Количество () > 0 ) Тогда
		п = Новый Структура ();
		п.Вставить ( "Идентификаторы", идентификаторы );
		с = "Удалить выбранные файлы 
		|без возможности восстановления?
		|";
		ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросУдалить", ЭтотОбъект, п ), с, РежимДиалогаВопрос.ДаНет );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросУдалить ( Ответ, Парамы ) Экспорт
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		удалитьВыбранныеФайлы ( Парамы );
		Модифицированность = Истина;		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура удалитьВыбранныеФайлы ( Парамы )
	
	ключи = Новый Массив ();
	Для Каждого ид Из Парамы.Идентификаторы Цикл
		строкаТЧ = Объект.Файлы.НайтиПоИдентификатору ( ид );
		Если ( строкаТЧ <> Неопределено ) Тогда
			ключи.Добавить ( строкаТЧ.КлючСтроки );			
		КонецЕсли;
	КонецЦикла;
	ответ = удалитьВыбранныеФайлыСервер ( Объект.Ссылка, ключи );
	Если ( ответ ) Тогда
		Для Каждого ид Из Парамы.Идентификаторы Цикл
			строкаТЧ = Объект.Файлы.НайтиПоИдентификатору ( ид );
			Объект.Файлы.Удалить ( строкаТЧ );
		КонецЦикла;	
	КонецЕсли;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция удалитьВыбранныеФайлыСервер ( Ссылка, Ключи )
	
	Для Каждого ключ Из Ключи Цикл
		п = Новый Структура ();
		п.Вставить ( "Объект", Ссылка );
		п.Вставить ( "КлючСтроки", ключ );
		РегистрыСведений.Файлы.УдалитьЗапись ( п );
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура HTMLСтрокаПриНажатии ( Элемент, ДанныеСобытия, СтандартнаяОбработка )
	
	// код ...
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьHTML ( Команда )
	
	Элементы.HTMLСтрока.Документ.execCommand ( "Print" ); 
	
КонецПроцедуры