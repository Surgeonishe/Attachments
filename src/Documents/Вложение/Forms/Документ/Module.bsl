
&НаСервере
Процедура ПриСозданииНаСервере ( Отказ, СтандартнаяОбработка )
	
	Если ( Объект.Ссылка.Пустая () ) Тогда
		начальноеЗаполнение  ();		
	КонецЕсли;
	установитьЗаголовок  ();
	
КонецПроцедуры

&НаСервере
Процедура начальноеЗаполнение ()
	
	Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	ХранениеФайлов = Константы.ХранениеФайлов.Получить ();
	
КонецПроцедуры

&НаСервере
Процедура установитьЗаголовок ()
	
	с = Документы.Вложение.ПолучитьПредставлениеПоВиду ( Объект.ВидВложения );
	Если ( Объект.Ссылка.Пустая () ) Тогда
		Заголовок = с + " (создание)";
	Иначе
		Заголовок = с + " от " + Формат ( Объект.Дата, "ДФ=dd.MM.yyyy" ) + " номер " + Объект.Номер;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	// код ...
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВложение ( Команда )
	
	п = Новый Структура ();
	РаботаСФайлами.Подготовить ( Новый ОписаниеОповещения ( "ЗагрузитьФайл", ЭтотОбъект, п ) );
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайл ( Результат, Парамы ) Экспорт 
	
	д = Новый ДиалогВыбораФайла ( РежимДиалогаВыбораФайла.Открытие );
	д.МножественныйВыбор = Ложь;
	д.Заголовок = НСтр ( "ru = 'Выберите файл'" );
	д.ПредварительныйПросмотр = Истина;
	д.Фильтр = РаботаСФайлами.ПолучитьФильтрРасширений ();
	д.Показать ( Новый ОписаниеОповещения ( "ОткрытьФайл", ЭтотОбъект, Парамы ) );
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл ( Файлы, Парам ) Экспорт 	
	                                                                 
	Если ( Файлы = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	поместитьВХранилище ( Файлы [ 0 ] ); 
	
КонецПроцедуры

&НаКлиенте
Процедура поместитьВХранилище ( ИмяФайла )
	
	Если ( ПустаяСтрока ( ИмяФайла ) ) Тогда
		Возврат;
	КонецЕсли;
	файл = Новый Файл ( ИмяФайла ) ;
	Если ( НЕ файл.Существует () ) Тогда
		Возврат;		
	КонецЕсли;
	передаваемыеФайлы = Новый Массив;
	передаваемыеФайлы.Добавить ( Новый ОписаниеПередаваемогоФайла ( файл.ПолноеИмя ) );
	п = Новый Структура ();
	п.Вставить ( "ПолноеИмя", файл.ПолноеИмя );
	п.Вставить ( "Расширение", файл.Расширение );
	п.Вставить ( "Имя", файл.Имя );
	НачатьПомещениеФайлов ( Новый ОписаниеОповещения ( "ПомещениеФайлов", ЭтотОбъект, п ), передаваемыеФайлы, , ЛОЖЬ, УникальныйИдентификатор );  
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлов ( Файлы, Параметры ) Экспорт
	
	Если ( Файлы.Количество () = 0 ) Тогда
		Возврат;
	КонецЕсли;
	сохранитьФайлы ( Файлы, Параметры );
	// Элементы.Файлы.ТекущаяСтрокаСтрока = Объект.Файлы.ПолучитьИдентификатор ();
	
КонецПроцедуры

&НаСервере
Процедура сохранитьФайлы ( Файлы, Параметры )
	
	данные = ПолучитьИзВременногоХранилища ( получитьАдресФайла ( Файлы, Параметры.ПолноеИмя ) );
	создатьПапкуОбъекта ();
	ИмяФайла = Параметры.Имя;
 	данные.Записать ( ХранениеФайлов + ИмяФайла );
	добавитьСтроку ( ИмяФайла );
	адрес = файлы [ 0 ].Хранение;
	Если ( ЭтоАдресВременногоХранилища ( адрес ) ) Тогда
		УдалитьИзВременногоХранилища ( адрес ); 
	КонецЕсли;
	сформироватьHTML ();
	
КонецПроцедуры

&НаСервере
Процедура создатьПапкуОбъекта ()
	
	путьКаталога = Лев ( ХранениеФайлов, СтрДлина ( ХранениеФайлов ) - 1 );
	каталог = Новый Файл ( путьКаталога );
	Если ( каталог.Существует () ) Тогда
		// код ...  
	Иначе
		СоздатьКаталог ( каталог.ПолноеИмя );
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура добавитьСтроку ( ИмяФайла )
	
	новая = Объект.Файлы.Добавить ();
	новая.Описание = ИмяФайла;
	м = Объект.Файлы.Выгрузить ( , "КлючСтроки" );
	новая.КлючСтроки = получитьКлюч ( м );
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция получитьКлюч ( Ключи )
	
	Возврат Справочники.КлючиСтрок.ПолучитьНовыйКлюч ( Ключи );

КонецФункции

&НаСервереБезКонтекста
Функция получитьАдресФайла ( Файлы, ПолноеИмя )
	
	Для Каждого описание Из Файлы Цикл
		Если ( НРег ( описание.ПолноеИмя ) = НРег ( ПолноеИмя ) ) Тогда
			Возврат описание.Хранение;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура СохранитьФайл ( Команда )
	
	текущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	Если ( текущиеДанные = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	п = Новый Структура ();
	п.Вставить ( "ПолноеИмяФайла", ИмяФайла );
	п.Вставить ( "ИмяФайла", текущиеДанные.ИмяФайла + текущиеДанные.Расширение );
	РаботаСФайлами.Подготовить ( Новый ОписаниеОповещения ( "СохранитьФайлНаДиск", ЭтотОбъект, п ) );
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлНаДиск ( Результат, Парам ) Экспорт 
	
	режим = РежимДиалогаВыбораФайла.Сохранение;
	д = Новый ДиалогВыбораФайла ( режим );
	д.МножественныйВыбор = Ложь;
	д.Заголовок = НСтр ( "ru = 'Выберите файл'" );
	д.Фильтр = РаботаСФайлами.ПолучитьФильтрРасширений ();
	д.Показать ( Новый ОписаниеОповещения ( "ВыгрузитьФайл", ЭтотОбъект, Парам ) );
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайл ( Файлы, Парам ) Экспорт 	
	                                                                 
	Если ( Файлы = Неопределено ) Тогда
		Возврат;
	КонецЕсли;
	адрес = получитьФайл ();
	Если ( ЭтоАдресВременногоХранилища ( адрес ) ) Тогда
		данные = ПолучитьИзВременногоХранилища ( адрес );
	 	данные.Записать ( Файлы [ 0 ] );
	КонецЕсли; 
		
КонецПроцедуры
 
&НаСервере
Функция получитьФайл ()
	
	Если ( ИмяФайла = "" ) Тогда
		Возврат "";
	КонецЕсли;
	данные = Новый ДвоичныеДанные ( ХранениеФайлов + "\" + ИмяФайла );
	Возврат ПоместитьВоВременноеХранилище ( данные );
	
КонецФункции

&НаКлиенте
Процедура УдалитьВложение ( Команда )
	
	п = Новый Структура ();
	// п.Вставить ( "Индекс", НаборЗаписей.Индекс ( Элементы.НаборЗаписей.ТекущиеДанные ) );
	с = "Удалить файл - " + ИмяФайла + "
	|без возможности восстановления?
	|";
	ПоказатьВопрос ( Новый ОписаниеОповещения ( "УдалитьЗапись", ЭтотОбъект, п ), с, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет );
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗапись ( Результат, Парам ) Экспорт 	
	
	Если ( Результат <> КодВозвратаДиалога.Да ) Тогда
		Возврат;
	КонецЕсли;
	Если ( Парам.Индекс <> Неопределено ) Тогда
//		данные = НаборЗаписей.Получить ( Парам.Индекс );
//		путьКФайлу = ХранениеФайлов + данные.ИмяФайла + данные.Расширение; 
//		ИмяФайла = "";
//		сформироватьHTML ();
//		удалитьПрикрепленныйФайл ( путьКФайлу ); 
//		НаборЗаписей.Удалить ( Парам.Индекс );
//		приИзмененииНабораЗаписей ();
//		ИмяФайла = "";
//		сформироватьHTML ();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура удалитьПрикрепленныйФайл ( Путь )
	
	УдалитьФайлы ( Путь );
	
КонецПроцедуры