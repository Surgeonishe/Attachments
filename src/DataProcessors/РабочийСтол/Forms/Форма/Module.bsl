
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидВложения = ПредопределенноеЗначение ( "Перечисление.ВидВложения.НакладнаяСчет" );
	установитьПараметрыСписка ();	
	
КонецПроцедуры

&НаСервере
Процедура установитьПараметрыСписка ()
	
	настройки = Новый НастройкиКомпоновкиДанных ();
	отбор = настройки.Отбор.Элементы.Добавить ( Тип ( "ЭлементОтбораКомпоновкиДанных" ) ); 
	отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных ( "ВидВложения" );
	отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	отбор.Использование = Истина;
	отбор.ПравоеЗначение = ВидВложения;
	Список.КомпоновщикНастроек.ЗагрузитьНастройки ( настройки );
	Элементы.Список.Обновить ();
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии ( Отказ )
	
	установитьОформление ();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНакладнаяНажатие ( Элемент )
	
	открытьНакладные ();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНакладнаяНажатие ( Элемент )
	
	открытьНакладные ();

КонецПроцедуры

&НаКлиенте
Процедура открытьНакладные ()
		
	ВидВложения = ПредопределенноеЗначение ( "Перечисление.ВидВложения.НакладнаяСчет" );
	приИзмененииВидаВложения ();
			
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСертификатНажатие ( Элемент )
	
	открытьСертификаты ();

КонецПроцедуры

&НаКлиенте
Процедура НадписьСертификатНажатие ( Элемент )
	
	открытьСертификаты ();

КонецПроцедуры

&НаКлиенте
Процедура открытьСертификаты ()
	
	ВидВложения = ПредопределенноеЗначение ( "Перечисление.ВидВложения.СертификатПротокол" );	
	приИзмененииВидаВложения ();
			
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПрайсНажатие ( Элемент )
	
	открытьПрайсы ();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПрайсНажатие ( Элемент )
	
	открытьПрайсы ();

КонецПроцедуры

&НаКлиенте
Процедура открытьПрайсы ()
	
	ВидВложения = ПредопределенноеЗначение ( "Перечисление.ВидВложения.Прайс" );
	приИзмененииВидаВложения ();	
			
КонецПроцедуры

&НаКлиенте
Процедура приИзмененииВидаВложения ()
	
	установитьОформление ();
	установитьПараметрыСписка ();
			
КонецПроцедуры

&НаКлиенте
Процедура установитьОформление ()
	
	оформлениеПоУмолчанию ();
	жирный = Новый Шрифт ( , , Истина );
	рамка = Новый Рамка ( ТипРамкиЭлементаУправления.Одинарная, 1 );
	Если ( ВидВложения =  ПредопределенноеЗначение ( "Перечисление.ВидВложения.НакладнаяСчет" ) ) Тогда
		Элементы.НадписьНакладная.Шрифт = жирный;
		Элементы.ДекорацияНакладная.Рамка = рамка;
		Заголовок = "Накладные (счета)";
	ИначеЕсли ( ВидВложения =  ПредопределенноеЗначение ( "Перечисление.ВидВложения.СертификатПротокол" ) ) Тогда
		Элементы.НадписьСертификат.Шрифт = жирный;
		Элементы.ДекорацияСертификат.Рамка = рамка;
		Заголовок = "Сертификаты (протоколы)";
	ИначеЕсли ( ВидВложения =  ПредопределенноеЗначение ( "Перечисление.ВидВложения.Прайс" ) ) Тогда
		Элементы.НадписьПрайс.Шрифт = жирный;
		Элементы.ДекорацияПрайс.Рамка = рамка;
		Заголовок = "Прайсы";
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура оформлениеПоУмолчанию ()
	
	обычный = Новый Шрифт ( , , Ложь );
	рамка = Новый Рамка ( ТипРамкиЭлементаУправления.БезРамки , 1 );
	Элементы.НадписьНакладная.Шрифт = обычный;
	Элементы.НадписьСертификат.Шрифт = обычный;
	Элементы.НадписьПрайс.Шрифт = обычный;
	Элементы.ДекорацияНакладная.Рамка = рамка;
	Элементы.ДекорацияСертификат.Рамка = рамка;
	Элементы.ДекорацияПрайс.Рамка = рамка;
			
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыходНажатие ( Элемент )
	
	выходИзПрограммы ();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВыходНажатие ( Элемент )
	
	выходИзПрограммы ();
	
КонецПроцедуры

&НаКлиенте 
Процедура выходИзПрограммы ()
	
	ПоказатьВопрос ( Новый ОписаниеОповещения ( "ВопросВыход", ЭтотОбъект ), "Выйти из программы?", РежимДиалогаВопрос.ДаНет ); 
	
КонецПроцедуры

&НаКлиенте 
Процедура ВопросВыход ( Ответ, Параметры ) Экспорт 
	
	Если ( Ответ = КодВозвратаДиалога.Да ) Тогда
		ЗавершитьРаботуСистемы ( Ложь );
	КонецЕсли; 
	
КонецПроцедуры